---
// src/components/ResumePDF.astro
// This component defines the PDF version of your resume
import { getCollection } from "astro:content";

// Get the resume data
const resumeData = await getCollection("resumes");
const resume = resumeData[0]?.data;

// Check if resume data exists
if (!resume) {
  throw new Error("Resume data not found");
}

// Format dates for work experience
const formatDate = (dateStr: string) => {
  if (!dateStr) return "Present";
  return dateStr.substring(0, 7).replace("-", "/");
};
---

<!doctype html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>{resume.basics.name} - Resume</title>
    <meta name="author" content={resume.basics.name} />
    <meta name="subject" content="Professional Resume" />
    <meta
      name="keywords"
      content={resume.skills?.map((skill) => skill.name).join(", ")}
    />
    <style>
      :root {
        --primary-text: #333333;
        --secondary-text: #555555;
        --border-color: #dddddd;
        --highlight: #f5f5f5;
      }

      body {
        font-family: "Arial", "Helvetica", sans-serif;
        line-height: 1.5;
        color: var(--primary-text);
        margin: 0;
        padding: 1cm;
        max-width: 21cm;
        margin: 0 auto;
      }

      h1,
      h2,
      h3,
      h4 {
        margin-top: 0;
        font-weight: 600;
      }

      h1 {
        font-size: 28pt;
        margin-bottom: 0.3cm;
      }

      h2 {
        font-size: 14pt;
        color: var(--secondary-text);
        margin-bottom: 0.5cm;
      }

      h3 {
        font-size: 12pt;
        border-bottom: 1px solid var(--border-color);
        padding-bottom: 0.2cm;
        margin-bottom: 0.5cm;
      }

      h4 {
        font-size: 11pt;
        margin-bottom: 0.2cm;
      }

      p {
        margin-bottom: 0.3cm;
        font-size: 10pt;
      }

      ul {
        margin-top: 0.1cm;
        padding-left: 0.5cm;
      }

      li {
        margin-bottom: 0.1cm;
        font-size: 10pt;
      }

      .header {
        margin-bottom: 1cm;
      }

      .contact-info {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5cm;
        margin-bottom: 0.5cm;
        font-size: 10pt;
      }

      .contact-item {
        display: flex;
        align-items: center;
      }

      .summary {
        margin-bottom: 1cm;
      }

      .section {
        margin-bottom: 1cm;
      }

      .work-item,
      .skill-category {
        margin-bottom: 0.5cm;
      }

      .job-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 0.2cm;
      }

      .job-title {
        font-weight: bold;
        font-size: 11pt;
      }

      .job-date {
        font-size: 10pt;
        color: var(--secondary-text);
      }

      .company {
        font-weight: 500;
        font-size: 10pt;
        margin-bottom: 0.2cm;
      }

      .job-summary {
        font-style: italic;
        margin-bottom: 0.2cm;
      }

      .skills-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0.5cm;
      }

      .skill-name {
        font-weight: bold;
        margin-bottom: 0.1cm;
      }

      .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.2cm;
      }

      .tag {
        background-color: var(--highlight);
        padding: 0.05cm 0.2cm;
        border-radius: 0.1cm;
        font-size: 8pt;
      }

      @page {
        size: A4;
        margin: 1cm;
      }
    </style>
  </head>
  <body>
    <div class="header">
      <h1>{resume.basics.name}</h1>
      {resume.basics.label && <h2>{resume.basics.label}</h2>}

      <div class="contact-info">
        {
          resume.basics.email && (
            <div class="contact-item">{resume.basics.email}</div>
          )
        }
        {
          resume.basics.phone && (
            <div class="contact-item">{resume.basics.phone}</div>
          )
        }
        {
          resume.basics.url && (
            <div class="contact-item">
              {resume.basics.url.replace(/^https?:\/\//, "")}
            </div>
          )
        }
      </div>

      {
        resume.basics.summary && (
          <div class="summary">
            <p>{resume.basics.summary}</p>
          </div>
        )
      }
    </div>

    {
      resume.skills && resume.skills.length > 0 && (
        <div class="section">
          <h3>Skills</h3>
          <div class="skills-grid">
            {resume.skills.map((skill) => (
              <div class="skill-category">
                <div class="skill-name">{skill.name}</div>
                {skill.keywords && skill.keywords.length > 0 && (
                  <div class="tags">
                    {skill.keywords.map((keyword) => (
                      <span class="tag">{keyword}</span>
                    ))}
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      )
    }

    {
      resume.work && resume.work.length > 0 && (
        <div class="section">
          <h3>Work Experience</h3>
          {resume.work.map((job) => (
            <div class="work-item">
              <div class="job-header">
                <div class="job-title">{job.position}</div>
                <div class="job-date">
                  {formatDate(job.startDate)} — {formatDate(job.endDate)}
                </div>
              </div>
              <div class="company">{job.name}</div>
              {job.summary && <div class="job-summary">{job.summary}</div>}

              {job.highlights && job.highlights.length > 0 && (
                <ul>
                  {job.highlights.map((highlight) => (
                    <li>{highlight}</li>
                  ))}
                </ul>
              )}
            </div>
          ))}
        </div>
      )
    }

    {
      resume.education && resume.education.length > 0 && (
        <div class="section">
          <h3>Education</h3>
          {resume.education.map((edu) => (
            <div class="work-item">
              <div class="job-header">
                <div class="job-title">{edu.institution}</div>
                <div class="job-date">
                  {formatDate(edu.startDate)} — {formatDate(edu.endDate)}
                </div>
              </div>
              <div class="company">
                {edu.studyType}
                {edu.area && `, ${edu.area}`}
              </div>
            </div>
          ))}
        </div>
      )
    }

    {
      resume.projects && resume.projects.length > 0 && (
        <div class="section">
          <h3>Projects</h3>
          {resume.projects.map((project) => (
            <div class="work-item">
              <div class="job-title">{project.name}</div>
              {project.description && <p>{project.description}</p>}

              {project.highlights && project.highlights.length > 0 && (
                <ul>
                  {project.highlights.map((highlight) => (
                    <li>{highlight}</li>
                  ))}
                </ul>
              )}
            </div>
          ))}
        </div>
      )
    }
  </body>
</html>
